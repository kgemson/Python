<LoginScreen>:
    GridLayout:
        cols: 1
        GridLayout:
            cols: 1
            padding: 15,15 #padding between this gridlayout and parent
            spacing: 20,20 #spacing between widgets of this gridlayout
            Label:
                text: "User Login"
                fontsize: '20sp' #sp = space-independent pixels
            TextInput:
                id: username
                hint_text: "Username"
            TextInput:
                id: password
                password: True
                hint_text: "Password"
            RelativeLayout:
                Button:
                    text: "Login"
                    on_press: root.login_user(root.ids.username.text, root.ids.password.text)
                    size_hint: 0.3, 0.5
                    pos_hint: {'center_x': 0.5, 'center_y': 0.6}
                    # size_hint says to use 30% horizontally and 50% vertically of what would normally be allocated
                    # (grid layout divided real estate equally for all components normally)
                    # since button is only element horizontally, it will still get 100% unless you put button in 'relativelayout' 
            Label:
                id: login_feedback
                text: ""
        GridLayout:
            cols: 2
            size_hint: 0.2, 0.2
            padding: 10,10 #padding between this gridlayout and parent
            spacing: 10,10 #spacing between widgets of this gridlayout
            Button:
                text:"Forgot password?"
                background_color: 0, 0, 0, 0 #4th field is transparency (0 == transparent)
                opacity: 1 if self.state == 'normal' else 0.5 # refers to text visibility - fully visible unless clicked
                color: 0.1, 0.7, 1, 1 # i.e. 10%R, 70%G, 100%B, fully opaque
            Button:
                text:"Sign up"
                background_color: 0, 0, 0, 0
                opacity: 1 if self.state == 'normal' else 0.5
                color: 0.1, 0.7, 1, 1 # i.e. 10%R, 70%G, 100%B, fully opaque
                on_press: root.sign_up()    #'root' refers to LoginScreen class

<SignupScreen>:
    GridLayout:
        cols: 1
        padding: 15,15 #padding between this gridlayout and parent
        spacing: 20,20 #spacing between widgets of this gridlayout
        Label:
            text: "Sign up below:"
            fontsize: '20sp' #sp = space-independent pixels
        TextInput:
            id: username
            hint_text: "Username"
            size_hint: 1.0, 0.5
        TextInput:
            id: password
            hint_text: "Password"
            password: True
            size_hint: 1.0, 0.5
        TextInput:
            id: password_confirm
            hint_text: "Confirm password"
            password: True
            size_hint: 1.0, 0.5
        GridLayout:
            cols: 2
            size_hint: 0.2, 0.2
            padding: 10,10 #padding between this gridlayout and parent
            spacing: 10,10 #spacing between widgets of this gridlayout
            Button:
                text:"Sign up"
                background_color: 0, 0, 0, 0
                opacity: 1 if self.state == 'normal' else 0.5
                color: 0.1, 0.7, 1, 1 # i.e. 10%R, 70%G, 100%B, fully opaque
                on_press: root.add_user(root.ids.username.text, root.ids.password.text, root.ids.password_confirm.text)    #'root' refers to LoginScreen class
            Button:
                text:"Return to login screen"
                background_color: 0, 0, 0, 0
                opacity: 1 if self.state == 'normal' else 0.5
                color: 0.1, 0.7, 1, 1 # i.e. 10%R, 70%G, 100%B, fully opaque
                on_press: root.return_to_login()    #'root' refers to LoginScreen class
        Label:
            id: login_feedback
            text: ""

<SignupScreenSuccess>:
    GridLayout:
        cols: 1
        padding: 15,15 #padding between this gridlayout and parent
        spacing: 20,20 #spacing between widgets of this gridlayout
        Label:
            text: "Sign-up successful!\nClick below to return to login screen"
            fontsize: '20sp' #sp = space-independent pixels
        Button:
            text: "Return to login screen"
            background_color: 0, 0, 0, 0
            opacity: 1 if self.state == 'normal' else 0.5
            color: 0.1, 0.7, 1, 1 # i.e. 10%R, 70%G, 100%B, fully opaque
            on_press: root.return_to_signin_screen()
        Label:
            id: padding
            text: ""

<LoginScreenSuccess>:
    GridLayout:
        cols: 1
        padding: 30,30 #padding between this gridlayout and parent
        spacing: 30,30 #spacing between widgets of this gridlayout
        RelativeLayout:
            size_hint: 0.35, 0.35
            ImageButton:
                on_press: root.logout_user()
                source: "logout_hover.png" if self.hovered else "logout_nothover.png"
                #size_hint: 0.35, 0.35
                pos_hint: {'center_x': 0.9, 'center_y': 0.8} # i.e. centre of image is 90% of way across
        Label:
            text: "How do you feel?"
        TextInput:
            id: feeling
            hint_text: "Happy, sad, shite..."
        Button:
            text: "Enlighten me"
            on_press: root.get_quote(root.ids.feeling.text)
        ScrollView:
            Label:
                id: quotelabel
                text: ""
                text_size: self.width, None # set max width and height of text to that of label
                size_hint_y: None
                height: self.texture_size[1]      
        
<RootWidget>:
    LoginScreen:
        name: "login_screen"
    SignupScreen:
        name: "sign_up_screen"
    SignupScreenSuccess:
        name: "sign_up_screen_success"
    LoginScreenSuccess
        name: "login_screen_success"